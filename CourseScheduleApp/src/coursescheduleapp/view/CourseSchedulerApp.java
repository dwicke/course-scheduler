package coursescheduleapp.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import coursescheduleapp.model.Model;

import javax.swing.ButtonGroup;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JRadioButtonMenuItem;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CourseSchedulerApp.java
 *
 * Created on Apr 6, 2010, 7:11:45 PM
 */


/**
* This code was edited or generated using CloudGarden's Jigloo
* SWT/Swing GUI Builder, which is free for non-commercial
* use. If Jigloo is being used commercially (ie, by a corporation,
* company or business for any purpose whatever) then you
* should purchase a license for each developer using Jigloo.
* Please visit www.cloudgarden.com for details.
* Use of Jigloo implies acceptance of these licensing terms.
* A COMMERCIAL LICENSE HAS NOT BEEN PURCHASED FOR
* THIS MACHINE, SO JIGLOO OR THIS CODE CANNOT BE USED
* LEGALLY FOR ANY CORPORATE OR COMMERCIAL PURPOSE.
*/
/**
 *
 * @author Drew
 */
public class CourseSchedulerApp extends javax.swing.JFrame implements ActionListener{

	private Model model;
	private ArrayList<JRadioButtonMenuItem> viewItems;
	private ArrayList<String> viewCommands;
	private ButtonGroup group;
	private ButtonGroup viewGroup;
    /** Creates new form CourseSchedulerApp */
    public CourseSchedulerApp() {
        initComponents();
        
        
    }
    public void setModel(Model model) throws SQLException
    {
    	this.model = model;
    	viewItems = new ArrayList<JRadioButtonMenuItem>();
    	viewCommands = new ArrayList<String>();
    	group = new ButtonGroup();
    	Iterator<String> semesters = model.getDB().getAllSemesters().iterator();
    	while(semesters.hasNext())
    	{
    		String semester = semesters.next();
    		JRadioButtonMenuItem item = new JRadioButtonMenuItem();
    		viewMn.add(item);
    		item.setText(semester);
    		item.addActionListener(this);
    		group.add(item);
    		viewCommands.add(semester);
    		item.setActionCommand(semester);
    		
    		viewItems.add(item);
    	}
    	if (viewCommands.size() > 0)
    	{
    		viewItems.get(viewCommands.size() - 1).setSelected(true);
    		this.setTitle("Course Scheduler for - " + viewCommands.get(viewCommands.size() - 1));
    	}
    	
    	prefSetView1.setPrefSet(model.getPrefSet(), 6,3, model.getDB());
    	scheduleView1.setModel(model);
    	
    	statusB.setModel(model);
    	Thread statThread = new Thread(statusB);
    	statThread.start();
    	
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        prefSetView1 = new PrefSetView();
        scheduleView1 = new ScheduleView();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));
        {
        	jMenuBar1 = new JMenuBar();
        	setJMenuBar(jMenuBar1);
        	{
        		fileMn = new JMenu();
        		jMenuBar1.add(fileMn);
        		fileMn.setText("File");
        		{
        			saveMnIt = new JMenuItem();
        			fileMn.add(saveMnIt);
        			saveMnIt.setText("Save in Current View");
        			saveMnIt.addActionListener(this);
        			saveMnIt.setActionCommand("Save");
        		}
        		{
        			printMnIt = new JMenuItem();
        			fileMn.add(printMnIt);
        			printMnIt.setText("Print");
        			printMnIt.addActionListener(this);
        			printMnIt.setActionCommand("Print");
        		}
        		
        		

        	}
        	{
        		viewMn = new JMenu();
        		jMenuBar1.add(viewMn);
        		viewMn.setText("View");
        	}
        	{
        		schedViewMn = new JMenu();
        		jMenuBar1.add(schedViewMn);
        		schedViewMn.setText("Set Schedule View");
        	}
        	{
        		
        		 orderedMnIt = new JRadioButtonMenuItem();
        		 listMnIt = new JRadioButtonMenuItem();
        		 viewGroup = new ButtonGroup ();
        		 viewGroup.add(orderedMnIt);
        		 viewGroup.add(listMnIt);
        		 schedViewMn.add(orderedMnIt);
        		 schedViewMn.add(listMnIt);
        		 
        		 orderedMnIt.setText("Order Results by Day");
        		 orderedMnIt.addActionListener(this);
        		 orderedMnIt.setActionCommand("order");
        		 orderedMnIt.setSelected(true);

        		 listMnIt.setText("List Results");
        		 listMnIt.addActionListener(this);
        		 listMnIt.setActionCommand("list");
        		 
        		
        	}
        }
        getContentPane().add(prefSetView1);
        getContentPane().add(scheduleView1);
        statusB = new StatusBar();
        getContentPane().add(statusB);
        scheduleView1.setPreferredSize(new java.awt.Dimension(1293, 181));

        pack();
        this.setSize(1112, 666);
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            	CourseSchedulerApp app = new CourseSchedulerApp();
            	try {
					app.setModel(new Model(6,3));
				} catch (SQLException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                app.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private PrefSetView prefSetView1;
    private ScheduleView scheduleView1;
    private JMenuItem saveMnIt, printMnIt;
    private JRadioButtonMenuItem orderedMnIt, listMnIt;
    private JMenu viewMn;
    private JMenu schedViewMn;
    private JMenu fileMn;
    private JMenuBar jMenuBar1;
    private StatusBar statusB;
    // End of variables declaration//GEN-END:variables
	@Override
	public void actionPerformed(ActionEvent arg0) {
		// TODO Auto-generated method stub
		if (viewCommands.contains(arg0.getActionCommand()))
		{
			model.getDB().setSemester(arg0.getActionCommand());
			this.setTitle("Course Scheduler for - " + arg0.getActionCommand());
		}
		else if (arg0.getActionCommand().equals("list"))
		{
			scheduleView1.setView(new ListSchedView());
		}
		else if (arg0.getActionCommand().equals("order"))
		{
			scheduleView1.setView(new OrderedSchedView());
		}
		else if (arg0.getActionCommand().equals("Save"))
		{
			scheduleView1.save();
		}
		else if (arg0.getActionCommand().equals("Print"))
		{
			scheduleView1.print();
		}
		
	}

}
